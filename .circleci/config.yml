version: 2.1
executors:
  default:
    docker:
      - image: circleci/ruby:2.5-node-browsers
        environment:
          BUNDLER_VERSION: 2.0.1
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: 'root'
          DB_PASSWORD: ''

      - image: circleci/mysql:5.7.22
        environment:
          MYSQL_DATABASE: 'ci_test'
          MYSQL_USER: 'root'
          MYSQL_ROOT_PASSWORD: 'rootpass'

    working_directory: ~/repo


commands:
  setup_bundler_and_cache:
    steps:
      - checkout
      # Download and c ache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.0.2
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
jobs:
  build:
    executor: default
    steps:
      - setup_bundler_and_cache

      # Database setup
      - run: mv config/database.yml.ci config/database.yml
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - add_ssh_keys:
          fingerprints:
            - "{$ SSH_KEY}"

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  RuboCop_test:
    executor: default
    steps:
      - setup_bundler_and_cache
      - run:
          command: bundle exec rubocop --fail-level w --display-only-fail-level-offenses

  Rspec_test:
    executor: default
    steps:
      - setup_bundler_and_cache
      - run:
          command: bundle exec rspec

  deploy:
    executor: default
    steps:
      - setup_bundler_and_cache
      #deploy with capistrano
      - run:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            bundle exec cap production deploy


workflows:
  version: 2.1
  build_test_and_deploy:
    jobs:
      - build
      - RuboCop_test:
          requires:
            - build
      - Rspec_test:
          requires:
            - build
      - deploy:
        - run p "{$ SSH_KEY}
          requires:
            - RuboCop_test
            - Rspec_test
